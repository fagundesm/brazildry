source("MEE3_070_sm_NicheFunctions.txt")
A.df <- read.table("MEE3_070_sm_ExampleA.txt",T)
colnames(A.df)[1] <- "id"#
colnames(A.df)[2] <- "species"#
#
#
A.df$id      <- as.factor(A.df$id)#
A.df$species <- as.factor(A.df$species)#
#
#
spnames   <- sort(unique(as.character(A.df$species)))#
no.spp    <- length(spnames)#
#
varnames <- colnames(A.df)[-(1:2)]    #
no.vars  <- length(varnames) #
#
#
#
#
#
#
#
#
#
#
#
#
#
#
vartypes <- c("rsel","count","cat","bin","propn","meas")#
#
#
#
#
cbind(varnames,vartypes)#
#
#
#
#
#
#
#
avail.list <- vector("list",no.vars)#
names(avail.list) <- varnames
avail.vect <- read.table("MEE3_070_sm_ExampleAhabitatAvail.txt",T)[1,]
#
avail.vect <- avail.vect[sort.list(names(avail.vect))]#
#
#
#
used <- levels(A.df$habitat)#
used %in% names(avail.vect)#
#
#
#
#
#
avail.vect <- avail.vect/sum(avail.vect)*100#
#
#
avail.list[[1]] <- avail.vect  #
                               #
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
avail.list#
#
#
#
#
#
#
#
#
#
#
#
#
#
alpha.list <- vector("list",no.vars)#
names(alpha.list) <- varnames#
#
for (vv in 1:no.vars) if (vartypes[vv]=="rsel")#
   {#
   choices <- unique(A.df[,vv+2])#
   no.ch   <- length(choices)#
   alpha.list[[vv]] <- matrix(NA,no.spp,no.ch)#
   dimnames(alpha.list[[vv]]) <- list(spnames,choices)#
   }#
#
#
#
#
#
#
#
#
#
no.array  <- array(1,c(no.spp,no.spp,no.vars))#
dimnames(no.array) <- list(spnames,spnames,varnames)#
#
#
#
#
for (vv in 1:no.vars)#
   {#
   y <- A.df[,colnames(A.df)==varnames[vv]]#
   if (vartypes[vv] == "bin")#
      no.array[,,vv] <- no.bin.fn(A.df$species,y)#
   if (vartypes[vv] == "cat")#
      no.array[,,vv] <- no.cat.fn(A.df$species,y)#
   if (vartypes[vv] == "count")#
      no.array[,,vv] <- no.count.fn(A.df$species,y)#
   if (vartypes[vv] == "cts")#
      no.array[,,vv] <- no.cts.fn(A.df$species,y)#
   if (vartypes[vv] == "meas")#
      no.array[,,vv] <- no.cts.fn(A.df$species,log(y))#
   if (vartypes[vv] == "pcent")#
      no.array[,,vv] <- no.cts.fn(A.df$species,#
         log(y/(100-y)))#
   if (vartypes[vv] == "propn")#
      no.array[,,vv] <- no.cts.fn(A.df$species,#
         log(y/(1-y)))#
   if (vartypes[vv] == "rsel")#
      {#
#
#
      no.choices <- length(avail.list[[vv]])#
      choicenames <- names(avail.list[[vv]])#
      avail.vect <- avail.list[[vv]]#
      alpha.mat <- alpha.fn(A.df$species,y,avail.vect)#
      alpha.list[[vv]] <- alpha.mat         #
#
#
      no.array[,,vv] <- no.rsel.cat.fn(alpha.mat)#
      }#
   }#
#
#
#
#
no.overall.mat <- apply(no.array,c(1,2),mean)#
no.overall.mat.sd <- apply(no.array,c(1,2),sd)
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
replic <- 10#
#
#
#
#
#
pseudo.no.array  <- array(1,c(no.spp,no.spp,no.vars,replic))#
dimnames(pseudo.no.array) <- list(spnames,spnames,varnames,NULL)#
#
#
#
temp.df <- A.df#
#
#
#
#
for (rr in 1:replic)#
   {#
   	#
#
   temp.df$species <- sample(temp.df$species)#
   for (vv in 1:no.vars)#
      {#
#
#
      y <- temp.df[,colnames(A.df)==varnames[vv]]#
#
#
      if (vartypes[vv] == "bin")#
         pseudo.no.array[,,vv,rr] <- no.bin.fn(temp.df$species,y)#
      if (vartypes[vv] == "cat")#
         pseudo.no.array[,,vv,rr] <- no.cat.fn(temp.df$species,y)#
      if (vartypes[vv] == "count")#
         pseudo.no.array[,,vv,rr] <- no.count.fn(temp.df$species,y)#
      if (vartypes[vv] == "cts")#
         pseudo.no.array[,,vv,rr] <- no.cts.fn(temp.df$species,y)#
      if (vartypes[vv] == "meas")#
         pseudo.no.array[,,vv,rr] <- no.cts.fn(temp.df$species,log(y))#
      if (vartypes[vv] == "pcent")#
         pseudo.no.array[,,vv,rr] <- no.cts.fn(temp.df$species,#
            log(y/(100-y)))#
      if (vartypes[vv] == "propn")#
         pseudo.no.array[,,vv,rr] <- no.cts.fn(temp.df$species,#
            log(y/(1-y)))#
      if (vartypes[vv] == "rsel")#
         {#
#
#
         no.choices <- length(avail.list[[vv]])#
         choicenames <- names(avail.list[[vv]])#
         avail.vect <- avail.list[[vv]]#
         alpha.mat  <- alpha.fn(temp.df$species,y,avail.vect)#
#
#
         pseudo.no.array[,,vv,rr] <- no.rsel.cat.fn(alpha.mat)#
         }#
      }#
   print(paste("Rep",rr,"done"))#
   }
#
#
sep.pvals     <- array(1,c(no.spp,no.spp,no.vars))#
dimnames(sep.pvals) <- list(spnames,spnames,varnames)#
#
for (spa in 1:(no.spp-1)) for (spb in (spa+1):no.spp)#
   for (vv in 1:no.vars)   #
   {#
   pseudo.nos <- pseudo.no.array[spa,spb,vv,]#
   data.no    <- no.array[spa,spb,vv]#
   sep.pvals[spa,spb,vv] <- mean(pseudo.nos<data.no) #
      length(pseudo.nos[data.no<pseudo.nos])#
   sep.pvals[spb,spa,vv] <- sep.pvals[spa,spb,vv] #
   }#
#
#
#
#
overall.pvals <- matrix(1,no.spp,no.spp)#
dimnames(overall.pvals) <- list(spnames,spnames)#
#
for (spa in 1:(no.spp-1)) for (spb in (spa+1):no.spp)#
   {#
   temp.mat  <- pseudo.no.array[spa,spb,,]#
   pseudo.nos <- apply(temp.mat,2,mean)#
   data.no    <- no.overall.mat[spa,spb]#
   overall.pvals[spa,spb] <- mean(pseudo.nos<data.no) #
      length(pseudo.nos[data.no<pseudo.nos])#
   overall.pvals[spb,spa] <- overall.pvals[spa,spb] #
   }#
#
#
#
#
#
#
#
#
#
#
#
#
#
VV <- ncol(A.df[,-c(1:2)])#
RR <- replic   #
#
no.mat <- matrix(NA,no.spp,ncol(A.df[,-c(1:2)]))#
for (vv in 1:VV)#
	no.mat[,vv] <- as.vector(as.dist(no.array[,,vv]))#
	#
#
#
#
	#
pseudo.mat <- 	array(NA,c(no.spp,ncol(A.df[,-c(1:2)]),replic))#
for (vv in 1:VV) for (rr in 1:RR)#
	pseudo.mat[,vv,rr] <- as.vector(as.dist(pseudo.no.array[,,vv,rr]))#
	#
#
#
#
#
#
	#
KK <- ncol(no.mat)      #
SS <- nrow(no.mat)      #
RR <- replic            #
#
#
data.ch <- rep(NA,KK)#
pseudo.ch <- matrix(NA,RR,KK)#
#
for (kk in 1:KK)#
{#
#
  x <- mean(no.mat[,kk])#
  v <- var(no.mat[,kk])*(SS-1)/SS #
  data.ch[kk] <- v/x/(1-x)#
  #
#
  for (rr in 1:RR)#
  {#
    x <- mean(pseudo.mat[,kk,rr])#
    v <- var(pseudo.mat[,kk,rr])*(SS-1)/SS#
    pseudo.ch[rr,kk] <- v/x/(1-x)#
  }#
}#
#
#
p.dims.diff <- rep(NA,KK)#
for (kk in 1:KK)#
  p.dims.diff[kk] <- mean(data.ch[kk] > pseudo.ch[,kk])#
names(p.dims.diff) <- paste("diff.dim",sort(varnames))#
#
#
p.dims.clus <- rep(NA,KK)#
for (kk in 1:KK)#
  p.dims.clus[kk] <- mean(data.ch[kk] < pseudo.ch[,kk])#
names(p.dims.clus) <- paste("clus.dim",sort(varnames))#
#
#
#
#
#
#
#
overall.data.ch   <- mean(data.ch)#
overall.pseudo.ch <- apply(pseudo.ch,1,mean)#
#
#
p.all.diff <- mean(overall.data.ch > overall.pseudo.ch)#
#
#
p.all.clus <- mean(overall.data.ch < overall.pseudo.ch)
NOa.results <- list(#
info = list(variables = cbind(varnames,vartypes),#
            perm.reps = replic),#
NOestimates = no.array,#
separate.pvalues = sep.pvals,#
separate.cluster.pvalues = p.dims.clus,#
separate.differentiated.pvalues = p.dims.diff,#
ests.overall = no.overall.mat,#
ests.overall.sd = no.overall.mat.sd,#
overall.pvalues = overall.pvals,#
overall.cluster.pvalues = p.all.clus,#
overall.differentiated.pvalues = p.all.diff)#
#
#
#
#
#
#
#
#
#
#
NOa.results
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
source("MEE3_070_sm_NicheFunctions.txt")#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
A.df <- read.table("MEE3_070_sm_ExampleA.txt",T)#
#
#
#
colnames(A.df)[1] <- "id"#
colnames(A.df)[2] <- "species"#
#
#
A.df$id      <- as.factor(A.df$id)#
A.df$species <- as.factor(A.df$species)#
#
#
spnames   <- sort(unique(as.character(A.df$species)))#
no.spp    <- length(spnames)#
#
varnames <- colnames(A.df)[-(1:2)]    #
no.vars  <- length(varnames) #
#
#
#
#
#
#
#
#
#
#
#
#
#
#
vartypes <- c("rsel","count","cat","bin","propn","meas")#
#
#
#
#
cbind(varnames,vartypes)#
#
#
#
#
#
#
#
avail.list <- vector("list",no.vars)#
names(avail.list) <- varnames#
#
#
#
#
#
#
#
#
#
#
#
#
#
avail.vect <- read.table("MEE3_070_sm_ExampleAhabitatAvail.txt",T)[1,]#
#
#
avail.vect <- avail.vect[sort.list(names(avail.vect))]#
#
#
#
used <- levels(A.df$habitat)#
used %in% names(avail.vect)#
#
#
#
#
#
avail.vect <- avail.vect/sum(avail.vect)*100#
#
#
avail.list[[1]] <- avail.vect  #
                               #
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
avail.list#
#
#
#
#
#
#
#
#
#
#
#
#
#
alpha.list <- vector("list",no.vars)#
names(alpha.list) <- varnames#
#
for (vv in 1:no.vars) if (vartypes[vv]=="rsel")#
   {#
   choices <- unique(A.df[,vv+2])#
   no.ch   <- length(choices)#
   alpha.list[[vv]] <- matrix(NA,no.spp,no.ch)#
   dimnames(alpha.list[[vv]]) <- list(spnames,choices)#
   }#
#
#
#
#
#
#
#
#
#
no.array  <- array(1,c(no.spp,no.spp,no.vars))#
dimnames(no.array) <- list(spnames,spnames,varnames)#
#
#
#
#
for (vv in 1:no.vars)#
   {#
   y <- A.df[,colnames(A.df)==varnames[vv]]#
   if (vartypes[vv] == "bin")#
      no.array[,,vv] <- no.bin.fn(A.df$species,y)#
   if (vartypes[vv] == "cat")#
      no.array[,,vv] <- no.cat.fn(A.df$species,y)#
   if (vartypes[vv] == "count")#
      no.array[,,vv] <- no.count.fn(A.df$species,y)#
   if (vartypes[vv] == "cts")#
      no.array[,,vv] <- no.cts.fn(A.df$species,y)#
   if (vartypes[vv] == "meas")#
      no.array[,,vv] <- no.cts.fn(A.df$species,log(y))#
   if (vartypes[vv] == "pcent")#
      no.array[,,vv] <- no.cts.fn(A.df$species,#
         log(y/(100-y)))#
   if (vartypes[vv] == "propn")#
      no.array[,,vv] <- no.cts.fn(A.df$species,#
         log(y/(1-y)))#
   if (vartypes[vv] == "rsel")#
      {#
#
#
      no.choices <- length(avail.list[[vv]])#
      choicenames <- names(avail.list[[vv]])#
      avail.vect <- avail.list[[vv]]#
      alpha.mat <- alpha.fn(A.df$species,y,avail.vect)#
      alpha.list[[vv]] <- alpha.mat         #
#
#
      no.array[,,vv] <- no.rsel.cat.fn(alpha.mat)#
      }#
   }#
#
#
#
#
no.overall.mat <- apply(no.array,c(1,2),mean)#
no.overall.mat.sd <- apply(no.array,c(1,2),sd)#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
replic <- 10#
#
#
#
#
#
pseudo.no.array  <- array(1,c(no.spp,no.spp,no.vars,replic))#
dimnames(pseudo.no.array) <- list(spnames,spnames,varnames,NULL)#
#
#
#
temp.df <- A.df#
#
#
#
#
for (rr in 1:replic)#
   {#
   	#
#
   temp.df$species <- sample(temp.df$species)#
   for (vv in 1:no.vars)#
      {#
#
#
      y <- temp.df[,colnames(A.df)==varnames[vv]]#
#
#
      if (vartypes[vv] == "bin")#
         pseudo.no.array[,,vv,rr] <- no.bin.fn(temp.df$species,y)#
      if (vartypes[vv] == "cat")#
         pseudo.no.array[,,vv,rr] <- no.cat.fn(temp.df$species,y)#
      if (vartypes[vv] == "count")#
         pseudo.no.array[,,vv,rr] <- no.count.fn(temp.df$species,y)#
      if (vartypes[vv] == "cts")#
         pseudo.no.array[,,vv,rr] <- no.cts.fn(temp.df$species,y)#
      if (vartypes[vv] == "meas")#
         pseudo.no.array[,,vv,rr] <- no.cts.fn(temp.df$species,log(y))#
      if (vartypes[vv] == "pcent")#
         pseudo.no.array[,,vv,rr] <- no.cts.fn(temp.df$species,#
            log(y/(100-y)))#
      if (vartypes[vv] == "propn")#
         pseudo.no.array[,,vv,rr] <- no.cts.fn(temp.df$species,#
            log(y/(1-y)))#
      if (vartypes[vv] == "rsel")#
         {#
#
#
         no.choices <- length(avail.list[[vv]])#
         choicenames <- names(avail.list[[vv]])#
         avail.vect <- avail.list[[vv]]#
         alpha.mat  <- alpha.fn(temp.df$species,y,avail.vect)#
#
#
         pseudo.no.array[,,vv,rr] <- no.rsel.cat.fn(alpha.mat)#
         }#
      }#
   print(paste("Rep",rr,"done"))#
   }#
#
#
#
#
#
#
#
#
#
#
#
#
#
sep.pvals     <- array(1,c(no.spp,no.spp,no.vars))#
dimnames(sep.pvals) <- list(spnames,spnames,varnames)#
#
for (spa in 1:(no.spp-1)) for (spb in (spa+1):no.spp)#
   for (vv in 1:no.vars)   #
   {#
   pseudo.nos <- pseudo.no.array[spa,spb,vv,]#
   data.no    <- no.array[spa,spb,vv]#
   sep.pvals[spa,spb,vv] <- mean(pseudo.nos<data.no) #
      length(pseudo.nos[data.no<pseudo.nos])#
   sep.pvals[spb,spa,vv] <- sep.pvals[spa,spb,vv] #
   }#
#
#
#
#
overall.pvals <- matrix(1,no.spp,no.spp)#
dimnames(overall.pvals) <- list(spnames,spnames)#
#
for (spa in 1:(no.spp-1)) for (spb in (spa+1):no.spp)#
   {#
   temp.mat  <- pseudo.no.array[spa,spb,,]#
   pseudo.nos <- apply(temp.mat,2,mean)#
   data.no    <- no.overall.mat[spa,spb]#
   overall.pvals[spa,spb] <- mean(pseudo.nos<data.no) #
      length(pseudo.nos[data.no<pseudo.nos])#
   overall.pvals[spb,spa] <- overall.pvals[spa,spb] #
   }#
#
#
#
#
#
#
#
#
#
#
#
#
#
VV <- ncol(A.df[,-c(1:2)])#
RR <- replic   #
#
no.mat <- matrix(NA,no.spp,ncol(A.df[,-c(1:2)]))#
for (vv in 1:VV)#
	no.mat[,vv] <- as.vector(as.dist(no.array[,,vv]))#
	#
#
#
#
	#
pseudo.mat <- 	array(NA,c(no.spp,ncol(A.df[,-c(1:2)]),replic))#
for (vv in 1:VV) for (rr in 1:RR)#
	pseudo.mat[,vv,rr] <- as.vector(as.dist(pseudo.no.array[,,vv,rr]))#
	#
#
#
#
#
#
	#
KK <- ncol(no.mat)      #
SS <- nrow(no.mat)      #
RR <- replic            #
#
#
data.ch <- rep(NA,KK)#
pseudo.ch <- matrix(NA,RR,KK)#
#
for (kk in 1:KK)#
{#
#
  x <- mean(no.mat[,kk])#
  v <- var(no.mat[,kk])*(SS-1)/SS #
  data.ch[kk] <- v/x/(1-x)#
  #
#
  for (rr in 1:RR)#
  {#
    x <- mean(pseudo.mat[,kk,rr])#
    v <- var(pseudo.mat[,kk,rr])*(SS-1)/SS#
    pseudo.ch[rr,kk] <- v/x/(1-x)#
  }#
}#
#
#
p.dims.diff <- rep(NA,KK)#
for (kk in 1:KK)#
  p.dims.diff[kk] <- mean(data.ch[kk] > pseudo.ch[,kk])#
names(p.dims.diff) <- paste("diff.dim",sort(varnames))#
#
#
p.dims.clus <- rep(NA,KK)#
for (kk in 1:KK)#
  p.dims.clus[kk] <- mean(data.ch[kk] < pseudo.ch[,kk])#
names(p.dims.clus) <- paste("clus.dim",sort(varnames))#
#
#
#
#
#
#
#
overall.data.ch   <- mean(data.ch)#
overall.pseudo.ch <- apply(pseudo.ch,1,mean)#
#
#
p.all.diff <- mean(overall.data.ch > overall.pseudo.ch)#
#
#
p.all.clus <- mean(overall.data.ch < overall.pseudo.ch)#
#
#
#
#
#
#
#
#
#
NOa.results <- list(#
info = list(variables = cbind(varnames,vartypes),#
            perm.reps = replic),#
NOestimates = no.array,#
separate.pvalues = sep.pvals,#
separate.cluster.pvalues = p.dims.clus,#
separate.differentiated.pvalues = p.dims.diff,#
ests.overall = no.overall.mat,#
ests.overall.sd = no.overall.mat.sd,#
overall.pvalues = overall.pvals,#
overall.cluster.pvalues = p.all.clus,#
overall.differentiated.pvalues = p.all.diff)#
#
#
#
#
#
#
#
#
#
#
NOa.results
